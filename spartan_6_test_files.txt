module half_adder_3(s,c,a,b);
	input a,b;
	output reg s,c;
	always @(*)
		begin
			s = a^b;
			c = a&b;
	end
endmodule


NET "a" LOC = SW5;
NET "b" LOC = SW4;

NET "s" LOC = DS3;
NET "c" LOC = DS4;

module half_adder_3_test;

	// Inputs
	reg a;
	reg b;

	// Outputs
	wire s;
	wire c;

	// Instantiate the Unit Under Test (UUT)
	half_adder_3 uut (
		.s(s), 
		.c(c), 
		.a(a), 
		.b(b)
	);

	initial begin
		// Initialize Inputs
		a = 1'b0;
		b = 1'b0;
		#2 a=1'b0 ; b=1'b1;
		#2 a=1'b1 ; b=1'b0;
		#2 a=1'b0 ; b=1'b1;
		#2 a=1'b1 ; b=1'b1;

		// Wait 100 ns for global reset to finish
		#500;
        
		// Add stimulus here

	end
  
endmodule
